'use strict';

Object.defineProperty(exports, "__esModule", {
   value: true
});
var strictEquals = function strictEquals(seed, candidate) {
   return seed === candidate;
};
var arrayMatcher = function arrayMatcher(matcher) {
   return function (seed, candidates) {
      return candidates.some(function (c) {
         return matcher(seed, c);
      });
   };
};

var done = function done(result) {
   var match = function match() {
      return {
         then: function then() {
            return done(result);
         },
         evaluate: function evaluate() {
            return done(result);
         }
      };
   };
   return {
      match: match,
      matchOneOf: match,
      scratch: function scratch() {
         return result;
      },
      scratchEvaluate: function scratchEvaluate() {
         return result;
      },
      using: function using() {
         return done(result);
      }
   };
};

var notDone = function notDone(seed) {
   var matcher = arguments.length <= 1 || arguments[1] === undefined ? strictEquals : arguments[1];

   var match = function match(candidate) {
      var newMatcher = arguments.length <= 1 || arguments[1] === undefined ? matcher : arguments[1];
      return {
         then: newMatcher(seed, candidate) ? function (result) {
            return done(result);
         } : function () {
            return notDone(seed, matcher);
         },
         evaluate: newMatcher(seed, candidate) ? function (result) {
            return done(typeof result === 'function' ? result() : result);
         } : function () {
            return notDone(seed, matcher);
         }
      };
   };
   return {
      match: match,
      matchOneOf: function matchOneOf(candidates) {
         return match(candidates, arrayMatcher(matcher));
      },
      scratch: function scratch(a) {
         return a;
      },
      scratchEvaluate: function scratchEvaluate(a) {
         return typeof a === 'function' ? a() : a;
      },
      using: function using(newMatcher) {
         return notDone(seed, newMatcher);
      }
   };
};

exports.default = function (value) {
   return notDone(value);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pdGNoLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBTSxlQUFlLFNBQWYsWUFBZSxDQUFDLElBQUQsRUFBTyxTQUFQO1VBQXFCLFNBQVMsU0FBVDtDQUFyQjtBQUNyQixJQUFNLGVBQWUsU0FBZixZQUFlLENBQUMsT0FBRDtVQUNsQixVQUFDLElBQUQsRUFBTyxVQUFQO2FBQXNCLFdBQVcsSUFBWCxDQUFnQjtnQkFBSyxRQUFRLElBQVIsRUFBYyxDQUFkO09BQUw7SUFBdEM7Q0FEa0I7O0FBR3JCLElBQU0sT0FBTyxTQUFQLElBQU8sQ0FBQyxNQUFELEVBQVk7QUFDdEIsT0FBTSxRQUFRLFNBQVIsS0FBUTthQUFPO0FBQ2xCLGVBQU07bUJBQU0sS0FBSyxNQUFMO1VBQU47QUFDTixtQkFBVTttQkFBTSxLQUFLLE1BQUw7VUFBTjs7SUFGQyxDQURRO0FBS3RCLFVBQU87QUFDSixrQkFESTtBQUVKLGtCQUFZLEtBQVo7QUFDQSxlQUFTO2dCQUFNO09BQU47QUFDVCx1QkFBaUI7Z0JBQU07T0FBTjtBQUNqQixhQUFPO2dCQUFNLEtBQUssTUFBTDtPQUFOO0lBTFYsQ0FMc0I7Q0FBWjs7QUFjYixJQUFNLFVBQVUsU0FBVixPQUFVLENBQUMsSUFBRCxFQUFrQztPQUEzQixnRUFBVSw0QkFBaUI7O0FBQy9DLE9BQU0sUUFBUSxTQUFSLEtBQVEsQ0FBQyxTQUFEO1VBQVksbUVBQWE7YUFBYTtBQUNqRCxlQUFNLFVBQUMsQ0FBVyxJQUFYLEVBQWlCLFNBQWpCLENBQUQsR0FDRCxVQUFDLE1BQUQ7bUJBQVksS0FBSyxNQUFMO1VBQVosR0FDQTttQkFBTSxRQUFRLElBQVIsRUFBYyxPQUFkO1VBQU47QUFDTCxtQkFBVSxVQUFDLENBQVcsSUFBWCxFQUFpQixTQUFqQixDQUFELEdBQ0wsVUFBQyxNQUFEO21CQUFZLEtBQUssT0FBTyxNQUFQLEtBQWtCLFVBQWxCLEdBQStCLFFBQS9CLEdBQTBDLE1BQTFDO1VBQWpCLEdBQ0E7bUJBQU0sUUFBUSxJQUFSLEVBQWMsT0FBZDtVQUFOOztJQU5NLENBRGlDO0FBUy9DLFVBQU87QUFDSixrQkFESTtBQUVKLGtCQUFZO2dCQUFjLE1BQU0sVUFBTixFQUFrQixhQUFhLE9BQWIsQ0FBbEI7T0FBZDtBQUNaLGVBQVM7Z0JBQUs7T0FBTDtBQUNULHVCQUFpQjtnQkFBSyxPQUFPLENBQVAsS0FBYSxVQUFiLEdBQTBCLEdBQTFCLEdBQWdDLENBQWhDO09BQUw7QUFDakIsYUFBTztnQkFBYyxRQUFRLElBQVIsRUFBYyxVQUFkO09BQWQ7SUFMVixDQVQrQztDQUFsQzs7a0JBa0JELFVBQUMsS0FBRDtVQUFXLFFBQVEsS0FBUjtDQUFYIiwiZmlsZSI6Iml0Y2guanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzdHJpY3RFcXVhbHMgPSAoc2VlZCwgY2FuZGlkYXRlKSA9PiBzZWVkID09PSBjYW5kaWRhdGU7XG5jb25zdCBhcnJheU1hdGNoZXIgPSAobWF0Y2hlcikgPT5cbiAgIChzZWVkLCBjYW5kaWRhdGVzKSA9PiBjYW5kaWRhdGVzLnNvbWUoYyA9PiBtYXRjaGVyKHNlZWQsIGMpKTtcblxuY29uc3QgZG9uZSA9IChyZXN1bHQpID0+IHtcbiAgIGNvbnN0IG1hdGNoID0gKCkgPT4gKHtcbiAgICAgIHRoZW46ICgpID0+IGRvbmUocmVzdWx0KSxcbiAgICAgIGV2YWx1YXRlOiAoKSA9PiBkb25lKHJlc3VsdCksXG4gICB9KTtcbiAgIHJldHVybiB7XG4gICAgICBtYXRjaCxcbiAgICAgIG1hdGNoT25lT2Y6IG1hdGNoLFxuICAgICAgc2NyYXRjaDogKCkgPT4gcmVzdWx0LFxuICAgICAgc2NyYXRjaEV2YWx1YXRlOiAoKSA9PiByZXN1bHQsXG4gICAgICB1c2luZzogKCkgPT4gZG9uZShyZXN1bHQpLFxuICAgfTtcbn07XG5cbmNvbnN0IG5vdERvbmUgPSAoc2VlZCwgbWF0Y2hlciA9IHN0cmljdEVxdWFscykgPT4ge1xuICAgY29uc3QgbWF0Y2ggPSAoY2FuZGlkYXRlLCBuZXdNYXRjaGVyID0gbWF0Y2hlcikgPT4gKHtcbiAgICAgIHRoZW46IChuZXdNYXRjaGVyKHNlZWQsIGNhbmRpZGF0ZSkpXG4gICAgICAgICA/IChyZXN1bHQpID0+IGRvbmUocmVzdWx0KVxuICAgICAgICAgOiAoKSA9PiBub3REb25lKHNlZWQsIG1hdGNoZXIpLFxuICAgICAgZXZhbHVhdGU6IChuZXdNYXRjaGVyKHNlZWQsIGNhbmRpZGF0ZSkpXG4gICAgICAgICA/IChyZXN1bHQpID0+IGRvbmUodHlwZW9mIHJlc3VsdCA9PT0gJ2Z1bmN0aW9uJyA/IHJlc3VsdCgpIDogcmVzdWx0KVxuICAgICAgICAgOiAoKSA9PiBub3REb25lKHNlZWQsIG1hdGNoZXIpLFxuICAgfSk7XG4gICByZXR1cm4ge1xuICAgICAgbWF0Y2gsXG4gICAgICBtYXRjaE9uZU9mOiBjYW5kaWRhdGVzID0+IG1hdGNoKGNhbmRpZGF0ZXMsIGFycmF5TWF0Y2hlcihtYXRjaGVyKSksXG4gICAgICBzY3JhdGNoOiBhID0+IGEsXG4gICAgICBzY3JhdGNoRXZhbHVhdGU6IGEgPT4gdHlwZW9mIGEgPT09ICdmdW5jdGlvbicgPyBhKCkgOiBhLFxuICAgICAgdXNpbmc6IG5ld01hdGNoZXIgPT4gbm90RG9uZShzZWVkLCBuZXdNYXRjaGVyKSxcbiAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCAodmFsdWUpID0+IG5vdERvbmUodmFsdWUpO1xuIl19